/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ProductsControllerV1CreateRequest = {
  xApiKey: string;
  createProductRequestEntity: components.CreateProductRequestEntity;
};

/** @internal */
export const ProductsControllerV1CreateRequest$inboundSchema: z.ZodType<
  ProductsControllerV1CreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-api-key": z.string(),
  CreateProductRequestEntity:
    components.CreateProductRequestEntity$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
    "CreateProductRequestEntity": "createProductRequestEntity",
  });
});

/** @internal */
export type ProductsControllerV1CreateRequest$Outbound = {
  "x-api-key": string;
  CreateProductRequestEntity: components.CreateProductRequestEntity$Outbound;
};

/** @internal */
export const ProductsControllerV1CreateRequest$outboundSchema: z.ZodType<
  ProductsControllerV1CreateRequest$Outbound,
  z.ZodTypeDef,
  ProductsControllerV1CreateRequest
> = z.object({
  xApiKey: z.string(),
  createProductRequestEntity:
    components.CreateProductRequestEntity$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
    createProductRequestEntity: "CreateProductRequestEntity",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductsControllerV1CreateRequest$ {
  /** @deprecated use `ProductsControllerV1CreateRequest$inboundSchema` instead. */
  export const inboundSchema = ProductsControllerV1CreateRequest$inboundSchema;
  /** @deprecated use `ProductsControllerV1CreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    ProductsControllerV1CreateRequest$outboundSchema;
  /** @deprecated use `ProductsControllerV1CreateRequest$Outbound` instead. */
  export type Outbound = ProductsControllerV1CreateRequest$Outbound;
}

export function productsControllerV1CreateRequestToJSON(
  productsControllerV1CreateRequest: ProductsControllerV1CreateRequest,
): string {
  return JSON.stringify(
    ProductsControllerV1CreateRequest$outboundSchema.parse(
      productsControllerV1CreateRequest,
    ),
  );
}

export function productsControllerV1CreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ProductsControllerV1CreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductsControllerV1CreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductsControllerV1CreateRequest' from JSON`,
  );
}
