/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DiscountsControllerV1DeleteRequest = {
  id: string;
  xApiKey: string;
};

/** @internal */
export const DiscountsControllerV1DeleteRequest$inboundSchema: z.ZodType<
  DiscountsControllerV1DeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  "x-api-key": z.string(),
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
  });
});

/** @internal */
export type DiscountsControllerV1DeleteRequest$Outbound = {
  id: string;
  "x-api-key": string;
};

/** @internal */
export const DiscountsControllerV1DeleteRequest$outboundSchema: z.ZodType<
  DiscountsControllerV1DeleteRequest$Outbound,
  z.ZodTypeDef,
  DiscountsControllerV1DeleteRequest
> = z.object({
  id: z.string(),
  xApiKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountsControllerV1DeleteRequest$ {
  /** @deprecated use `DiscountsControllerV1DeleteRequest$inboundSchema` instead. */
  export const inboundSchema = DiscountsControllerV1DeleteRequest$inboundSchema;
  /** @deprecated use `DiscountsControllerV1DeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DiscountsControllerV1DeleteRequest$outboundSchema;
  /** @deprecated use `DiscountsControllerV1DeleteRequest$Outbound` instead. */
  export type Outbound = DiscountsControllerV1DeleteRequest$Outbound;
}

export function discountsControllerV1DeleteRequestToJSON(
  discountsControllerV1DeleteRequest: DiscountsControllerV1DeleteRequest,
): string {
  return JSON.stringify(
    DiscountsControllerV1DeleteRequest$outboundSchema.parse(
      discountsControllerV1DeleteRequest,
    ),
  );
}

export function discountsControllerV1DeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<DiscountsControllerV1DeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DiscountsControllerV1DeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscountsControllerV1DeleteRequest' from JSON`,
  );
}
