/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LicensesControllerV1ActivateRequest = {
  xApiKey: string;
  activateLicenseRequestEntity: components.ActivateLicenseRequestEntity;
};

/** @internal */
export const LicensesControllerV1ActivateRequest$inboundSchema: z.ZodType<
  LicensesControllerV1ActivateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-api-key": z.string(),
  ActivateLicenseRequestEntity:
    components.ActivateLicenseRequestEntity$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
    "ActivateLicenseRequestEntity": "activateLicenseRequestEntity",
  });
});

/** @internal */
export type LicensesControllerV1ActivateRequest$Outbound = {
  "x-api-key": string;
  ActivateLicenseRequestEntity:
    components.ActivateLicenseRequestEntity$Outbound;
};

/** @internal */
export const LicensesControllerV1ActivateRequest$outboundSchema: z.ZodType<
  LicensesControllerV1ActivateRequest$Outbound,
  z.ZodTypeDef,
  LicensesControllerV1ActivateRequest
> = z.object({
  xApiKey: z.string(),
  activateLicenseRequestEntity:
    components.ActivateLicenseRequestEntity$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
    activateLicenseRequestEntity: "ActivateLicenseRequestEntity",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LicensesControllerV1ActivateRequest$ {
  /** @deprecated use `LicensesControllerV1ActivateRequest$inboundSchema` instead. */
  export const inboundSchema =
    LicensesControllerV1ActivateRequest$inboundSchema;
  /** @deprecated use `LicensesControllerV1ActivateRequest$outboundSchema` instead. */
  export const outboundSchema =
    LicensesControllerV1ActivateRequest$outboundSchema;
  /** @deprecated use `LicensesControllerV1ActivateRequest$Outbound` instead. */
  export type Outbound = LicensesControllerV1ActivateRequest$Outbound;
}

export function licensesControllerV1ActivateRequestToJSON(
  licensesControllerV1ActivateRequest: LicensesControllerV1ActivateRequest,
): string {
  return JSON.stringify(
    LicensesControllerV1ActivateRequest$outboundSchema.parse(
      licensesControllerV1ActivateRequest,
    ),
  );
}

export function licensesControllerV1ActivateRequestFromJSON(
  jsonString: string,
): SafeParseResult<LicensesControllerV1ActivateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      LicensesControllerV1ActivateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LicensesControllerV1ActivateRequest' from JSON`,
  );
}
