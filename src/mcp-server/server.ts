/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { CreemCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope, mcpScopes } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$activateLicense } from "./tools/activateLicense.js";
import { tool$cancelSubscription } from "./tools/cancelSubscription.js";
import { tool$createCheckout } from "./tools/createCheckout.js";
import { tool$createDiscount } from "./tools/createDiscount.js";
import { tool$createProduct } from "./tools/createProduct.js";
import { tool$customerPortalGenerateLogin } from "./tools/customerPortalGenerateLogin.js";
import { tool$deactivateLicense } from "./tools/deactivateLicense.js";
import { tool$deleteDiscount } from "./tools/deleteDiscount.js";
import { tool$getCheckout } from "./tools/getCheckout.js";
import { tool$getCustomer } from "./tools/getCustomer.js";
import { tool$getDiscount } from "./tools/getDiscount.js";
import { tool$getProduct } from "./tools/getProduct.js";
import { tool$getSubscription } from "./tools/getSubscription.js";
import { tool$listProducts } from "./tools/listProducts.js";
import { tool$listTransactions } from "./tools/listTransactions.js";
import { tool$updateSubscription } from "./tools/updateSubscription.js";
import { tool$validateLicense } from "./tools/validateLicense.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Creem",
    version: "0.1.10",
  });

  const client = new CreemCore({
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes ?? mcpScopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$getProduct);
  tool(tool$createProduct);
  tool(tool$listProducts);
  tool(tool$getCustomer);
  tool(tool$customerPortalGenerateLogin);
  tool(tool$getSubscription);
  tool(tool$cancelSubscription);
  tool(tool$updateSubscription);
  tool(tool$getCheckout);
  tool(tool$createCheckout);
  tool(tool$activateLicense);
  tool(tool$deactivateLicense);
  tool(tool$validateLicense);
  tool(tool$getDiscount);
  tool(tool$createDiscount);
  tool(tool$deleteDiscount);
  tool(tool$listTransactions);

  return server;
}
