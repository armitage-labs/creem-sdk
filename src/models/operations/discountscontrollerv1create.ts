/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DiscountsControllerV1CreateRequest = {
  xApiKey: string;
  createDiscountRequestEntity: components.CreateDiscountRequestEntity;
};

/** @internal */
export const DiscountsControllerV1CreateRequest$inboundSchema: z.ZodType<
  DiscountsControllerV1CreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-api-key": z.string(),
  CreateDiscountRequestEntity:
    components.CreateDiscountRequestEntity$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
    "CreateDiscountRequestEntity": "createDiscountRequestEntity",
  });
});

/** @internal */
export type DiscountsControllerV1CreateRequest$Outbound = {
  "x-api-key": string;
  CreateDiscountRequestEntity: components.CreateDiscountRequestEntity$Outbound;
};

/** @internal */
export const DiscountsControllerV1CreateRequest$outboundSchema: z.ZodType<
  DiscountsControllerV1CreateRequest$Outbound,
  z.ZodTypeDef,
  DiscountsControllerV1CreateRequest
> = z.object({
  xApiKey: z.string(),
  createDiscountRequestEntity:
    components.CreateDiscountRequestEntity$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
    createDiscountRequestEntity: "CreateDiscountRequestEntity",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountsControllerV1CreateRequest$ {
  /** @deprecated use `DiscountsControllerV1CreateRequest$inboundSchema` instead. */
  export const inboundSchema = DiscountsControllerV1CreateRequest$inboundSchema;
  /** @deprecated use `DiscountsControllerV1CreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    DiscountsControllerV1CreateRequest$outboundSchema;
  /** @deprecated use `DiscountsControllerV1CreateRequest$Outbound` instead. */
  export type Outbound = DiscountsControllerV1CreateRequest$Outbound;
}

export function discountsControllerV1CreateRequestToJSON(
  discountsControllerV1CreateRequest: DiscountsControllerV1CreateRequest,
): string {
  return JSON.stringify(
    DiscountsControllerV1CreateRequest$outboundSchema.parse(
      discountsControllerV1CreateRequest,
    ),
  );
}

export function discountsControllerV1CreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DiscountsControllerV1CreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DiscountsControllerV1CreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscountsControllerV1CreateRequest' from JSON`,
  );
}
