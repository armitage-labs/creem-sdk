/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CheckoutsControllerV1CreateCheckoutRequest = {
  xApiKey: string;
  createCheckoutRequestEntity: components.CreateCheckoutRequestEntity;
};

/** @internal */
export const CheckoutsControllerV1CreateCheckoutRequest$inboundSchema:
  z.ZodType<CheckoutsControllerV1CreateCheckoutRequest, z.ZodTypeDef, unknown> =
    z.object({
      "x-api-key": z.string(),
      CreateCheckoutRequestEntity:
        components.CreateCheckoutRequestEntity$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "x-api-key": "xApiKey",
        "CreateCheckoutRequestEntity": "createCheckoutRequestEntity",
      });
    });

/** @internal */
export type CheckoutsControllerV1CreateCheckoutRequest$Outbound = {
  "x-api-key": string;
  CreateCheckoutRequestEntity: components.CreateCheckoutRequestEntity$Outbound;
};

/** @internal */
export const CheckoutsControllerV1CreateCheckoutRequest$outboundSchema:
  z.ZodType<
    CheckoutsControllerV1CreateCheckoutRequest$Outbound,
    z.ZodTypeDef,
    CheckoutsControllerV1CreateCheckoutRequest
  > = z.object({
    xApiKey: z.string(),
    createCheckoutRequestEntity:
      components.CreateCheckoutRequestEntity$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      xApiKey: "x-api-key",
      createCheckoutRequestEntity: "CreateCheckoutRequestEntity",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsControllerV1CreateCheckoutRequest$ {
  /** @deprecated use `CheckoutsControllerV1CreateCheckoutRequest$inboundSchema` instead. */
  export const inboundSchema =
    CheckoutsControllerV1CreateCheckoutRequest$inboundSchema;
  /** @deprecated use `CheckoutsControllerV1CreateCheckoutRequest$outboundSchema` instead. */
  export const outboundSchema =
    CheckoutsControllerV1CreateCheckoutRequest$outboundSchema;
  /** @deprecated use `CheckoutsControllerV1CreateCheckoutRequest$Outbound` instead. */
  export type Outbound = CheckoutsControllerV1CreateCheckoutRequest$Outbound;
}

export function checkoutsControllerV1CreateCheckoutRequestToJSON(
  checkoutsControllerV1CreateCheckoutRequest:
    CheckoutsControllerV1CreateCheckoutRequest,
): string {
  return JSON.stringify(
    CheckoutsControllerV1CreateCheckoutRequest$outboundSchema.parse(
      checkoutsControllerV1CreateCheckoutRequest,
    ),
  );
}

export function checkoutsControllerV1CreateCheckoutRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CheckoutsControllerV1CreateCheckoutRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CheckoutsControllerV1CreateCheckoutRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CheckoutsControllerV1CreateCheckoutRequest' from JSON`,
  );
}
