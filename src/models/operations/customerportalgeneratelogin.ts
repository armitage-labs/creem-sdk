/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalGenerateLoginRequest = {
  xApiKey: string;
  createCustomerPortalLinkRequestEntity:
    components.CreateCustomerPortalLinkRequestEntity;
};

/** @internal */
export const CustomerPortalGenerateLoginRequest$inboundSchema: z.ZodType<
  CustomerPortalGenerateLoginRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-api-key": z.string(),
  CreateCustomerPortalLinkRequestEntity:
    components.CreateCustomerPortalLinkRequestEntity$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
    "CreateCustomerPortalLinkRequestEntity":
      "createCustomerPortalLinkRequestEntity",
  });
});

/** @internal */
export type CustomerPortalGenerateLoginRequest$Outbound = {
  "x-api-key": string;
  CreateCustomerPortalLinkRequestEntity:
    components.CreateCustomerPortalLinkRequestEntity$Outbound;
};

/** @internal */
export const CustomerPortalGenerateLoginRequest$outboundSchema: z.ZodType<
  CustomerPortalGenerateLoginRequest$Outbound,
  z.ZodTypeDef,
  CustomerPortalGenerateLoginRequest
> = z.object({
  xApiKey: z.string(),
  createCustomerPortalLinkRequestEntity:
    components.CreateCustomerPortalLinkRequestEntity$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
    createCustomerPortalLinkRequestEntity:
      "CreateCustomerPortalLinkRequestEntity",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalGenerateLoginRequest$ {
  /** @deprecated use `CustomerPortalGenerateLoginRequest$inboundSchema` instead. */
  export const inboundSchema = CustomerPortalGenerateLoginRequest$inboundSchema;
  /** @deprecated use `CustomerPortalGenerateLoginRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalGenerateLoginRequest$outboundSchema;
  /** @deprecated use `CustomerPortalGenerateLoginRequest$Outbound` instead. */
  export type Outbound = CustomerPortalGenerateLoginRequest$Outbound;
}

export function customerPortalGenerateLoginRequestToJSON(
  customerPortalGenerateLoginRequest: CustomerPortalGenerateLoginRequest,
): string {
  return JSON.stringify(
    CustomerPortalGenerateLoginRequest$outboundSchema.parse(
      customerPortalGenerateLoginRequest,
    ),
  );
}

export function customerPortalGenerateLoginRequestFromJSON(
  jsonString: string,
): SafeParseResult<CustomerPortalGenerateLoginRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalGenerateLoginRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomerPortalGenerateLoginRequest' from JSON`,
  );
}
